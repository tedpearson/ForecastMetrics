name: release

on:
  push:
    tags:
      - 'v*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: go test -v .

      - name: Build linux-arm
        run: env GOOS=linux GOARCH=arm go build -v -o forecastmetrics-linux-arm .
      - name: Build linux-amd64
        run: env GOOS=linux GOARCH=amd64 go build -v -o forecastmetrics-linux-amd64 .
      - name: Build darwin-amd64
        run: env GOOS=darwin GOARCH=amd64 go build -v -o forecastmetrics-darwin-amd64 .
      - name: set deb version
        run: echo "DEB_VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
      - name: set deb file name
        run: echo "DEB_FILE=forecastmetrics_${DEB_VERSION}_armhf.deb" >> $GITHUB_ENV
      - name: Create armhf deb
        run: packaging/deb.sh forecastmetrics-linux-arm $DEB_VERSION $DEB_FILE

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{github.ref}}
          release_name: ${{github.ref}}

      - name: Upload linux-arm
        uses: actions/upload-release-asset@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forecastmetrics-linux-arm
          asset_name: forecastmetrics-linux-arm
          asset_content_type: application/octet-stream

      - name: Upload linux-amd64
        uses: actions/upload-release-asset@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forecastmetrics-linux-amd64
          asset_name: forecastmetrics-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload darwin-amd64
        uses: actions/upload-release-asset@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: forecastmetrics-darwin-amd64
          asset_name: forecastmetrics-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload debian armhf package
        uses: actions/upload-release-asset@v1
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: $DEB_FILE
          asset_name: $DEB_FILE
          asset_content_type: application/octet-stream
