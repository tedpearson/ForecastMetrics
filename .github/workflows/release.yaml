name: release

on:
  workflow_dispatch:
    inputs:
      release_version:
        description: Version to release (vX.X.X)
        required: true
        type: string

jobs:
  build:
    name: Build
    strategy:
      matrix:
        GOOS: [ linux, darwin ]
        GOARCH: [ arm, arm64, amd64 ]
        exclude:
          - GOOS: darwin
            GOARCH: arm
    runs-on: ubuntu-latest
    env:
      executable: forecastmetrics-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: ^1.19
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Test
        run: go test -v .

      - name: Build
        run: |
          VERSION=$(git describe --tags --dirty --always --long)
          DATE=$(date)
          GOVERSION=$(go version)
          LDFLAGS="-X 'main.version=$VERSION'"
          LDFLAGS="$LDFLAGS -X 'main.goVersion=$GOVERSION'"
          LDFLAGS="$LDFLAGS -X 'main.buildDate=$DATE'"
          env GOOS=${{matrix.GOOS}} GOARCH=${{matrix.GOARCH}} go build -ldflags "$LDFLAGS" -v -o ${{env.executable}} .

      - name: Create or update release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: ${{env.executable}}
          tag: ${{inputs.release_version}}
          commit: master
          token: ${{ secrets.GITHUB_TOKEN }}
